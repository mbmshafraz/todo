openapi: 3.0.3
info:
  title: ToDo List - Nodejs REST API Service
  description: >-
    This is the backend of To Do list app
    written in Nodejs
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Choreo
  url: https://choreo.dev
servers:
  - url: http://localhost:8080
tags:
  - name: ToDo list
    description: ToDo list
paths:
  /todos:
    summary: List all ToDos
    get:
      summary: List all ToDos
      operationId: ListAllToDos
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringArray"
    post:
      summary: Insert a new ToDo
      operationId: SetNewToDo
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid request body
      tags:
        - todos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyValue"

  /todos/{todo_id}:
    summary: Get book by todo_id
    get:
      tags:
        - todos
      summary: Get book by todo_id
      operationId: GetBookByTODOId
      parameters:
        - name: todo_id
          in: path
          description: todo_id of ToDo to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyValue"
        "404":
          description: ToDo not found
    delete:
      tags:
        - todos
      summary: Delete ToDo by todo_id
      description: Deletes a single ToDo based on the todo_id supplied
      operationId: DeleteBookByToDoId
      parameters:
        - name: todo_id
          in: path
          description: todo_id of ToDo to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "404":
          description: todo not found
    put:
      tags:
        - todos
      summary: Update book status by todo_id
      description: Updates the ToDo based on the todo_id supplied
      operationId: UpdateBookStatusByToDoId
      parameters:
        - name: todo_id
          in: path
          description: ToDo to update
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "404":
          description: todo_id not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Status"
  /healthz:
    summary: Healthcheck endpoint
    get:
      summary: Healthcheck
      operationId: Healthcheck
      responses:
        "200":
          description: Healthy response

components:
  schemas:
    Key:
      type: object
      properties:
        todo_id:
          type: int
          example: 01
    Status:
      type: object
      properties:
        status:
          type: string
          example: "read"
    KeyValue:
      type: object
      required:
        - todo_id
        - description
      properties:
        title:
          type: int
          example: 01
        description:
          type: string
          example: "my-todo"
    StringArray:
      type: array
      items:
        type: string
